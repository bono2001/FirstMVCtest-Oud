@model IEnumerable<FirstMVCtest.Models.Item>

@{
    ViewData["Title"] = "Item";
}

<div style="display: flex; flex-direction: column; min-height: 100vh;">
    <!-- Content section -->
    <div style="flex-grow: 1;">
        <h1>Your Items</h1>

        <!-- Dropdown form for sorting -->
        <form asp-action="Index" method="get">
            <label for="sortOrder">Sort by:</label>
            <select id="sortOrder" name="sortOrder" class="form-control" style="display: inline-block; width: auto;">
                <option value="name_asc" selected>Sort by Name (A-Z)</option>
                <option value="name_desc">Sort by Name (Z-A)</option>
                <option value="price_asc">Sort by Price (Low to High)</option>
                <option value="price_desc">Sort by Price (High to Low)</option>
                <option value="date_asc">Sort by Purchase Date (Oldest First)</option>
                <option value="date_desc">Sort by Purchase Date (Newest First)</option>
                <option value="category_asc">Sort by Category (A-Z)</option>
                <option value="category_desc">Sort by Category (Z-A)</option>
            </select>
            <input type="submit" value="Sort" class="btn btn-primary" />
        </form>

        <p>
            <a asp-action="Create" class="btn-custom">Create New</a>
        </p>

        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                    <th>@Html.DisplayNameFor(model => model.Price)</th>
                    <th>@Html.DisplayNameFor(model => model.Value)</th>
                    <th>@Html.DisplayNameFor(model => model.PurchaseDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Condition)</th>
                    <th>@Html.DisplayNameFor(model => model.Origin)</th>
                    <th>@Html.DisplayNameFor(model => model.ForSale)</th>
                    <th>@Html.DisplayNameFor(model => model.ForTrade)</th>
                    <th>@Html.DisplayNameFor(model => model.Category)</th>
                    <th style="width: 200px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(item.Name ?? "N/A")</td>
                        <td>@(item.Description ?? "N/A")</td>
                        <td>@item.Quantity</td>
                        <td>@item.Price</td>
                        <td>@item.Value</td>
                        <td>@Html.DisplayFor(modelItem => item.PurchaseDate)</td>
                        <td>@(item.Condition ?? "N/A")</td>
                        <td>@(item.Origin ?? "N/A")</td>
                        <td>
                            @if (item.ForSale.HasValue && item.ForSale.Value)
                            {
                                <span class="text-success">&#10004;</span>
                            }
                            else if (item.ForSale.HasValue && !item.ForSale.Value)
                            {
                                <span class="text-danger">&#10060;</span>
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </td>
                        <td>
                            @if (item.ForTrade.HasValue && item.ForTrade.Value)
                            {
                                <span class="text-success">&#10004;</span>
                            }
                            else if (item.ForTrade.HasValue && !item.ForTrade.Value)
                            {
                                <span class="text-danger">&#10060;</span>
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </td>
                        <td>@(item.Category?.Name ?? "N/A")</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn-custom">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn-custom">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn-custom">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Custom CSS for buttons -->
<style>
    .btn-custom {
        display: inline-block;
        padding: 6px 12px;
        margin: 2px;
        font-size: 14px;
        font-weight: bold;
        color: black;
        background-color: transparent;
        border: 2px solid black;
        text-decoration: none;
        border-radius: 4px;
        transition: all 0.3s ease-in-out;
    }

        .btn-custom:hover {
            background-color: black;
            color: white;
            text-decoration: none;
        }

        .btn-custom:active {
            background-color: gray;
        }

    .table {
        width: 100%;
        table-layout: auto;
    }

        .table td, .table th {
            color: black !important;
            text-align: center;
            vertical-align: middle;
        }
</style>
